#!/bin/bash

set -e

if [[ -n $1 ]]; then
  PACKAGE="$1"
else
  echo "Usage: $0 <package-name>"
  exit 1
fi

SCRIPT_DIR=$(dirname $0)

echo "[startpyproject] Creating git repository"
git init

echo "[startpyproject] Copying .gitignore template"
cat << EOF > .gitignore
__pycache__
*.pyc
*.pyo
.mypy_cache
.pytest_cache
.venv
*.egg-info
/build
/dist
.coverage

*.swp
*~
.DS_Store
EOF

echo "[startpyproject] Copying .flake8 template"
cat << EOF > .flake8
[flake8]
max-line-length = 88
exclude = .git, __pycache__, __init__py
# Mostly ignore things that black inserts
ignore =
    # E203 whitespace before ':'
    E203,
    # W503 line break before binary operator
    W503,
    # W293 blank line contains whitespace (sometimes we need it in string literals,
    # and black will catch it anyway)
    W293,
    # E501 line too long
    E501,
EOF

echo "[startpyproject] Copying .git/hooks/pre-commit template"
cat << EOF > .git/hooks/pre-commit
#!/bin/sh
#
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

black --check "$PACKAGE" test && \
  flake8 "$PACKAGE" test
EOF
chmod +x .git/hooks/pre-commit

echo "[startpyproject] Creating package directory"
mkdir "$PACKAGE"
touch "$PACKAGE/__init__.py"

echo "[startpyproject] Creating test directory"
mkdir test
touch test/__init__.py

echo "[startpyproject] Creating virtual environment"
virtualenv .venv --python=python3

echo "[startpyproject] All done!"
