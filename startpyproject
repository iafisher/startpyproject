#!/bin/bash
# startpyproject: Auto-generate a boilerplate Python project.
# 
# Does the following:
#   - Initializes a git repo with a .gitignore that's tailored for Python.
#   - Sets up a pre-commit hook for git that runs black and flake8.
#   - Creates a flake8 configuration file.
#   - Creates directories for the main package and the test package.
#   - Creates a virtual environment.
# 
# Make sure to run the script in the already-created project directory.
# Typical usage is
# 
#     $ mkdir my-python-project
#     $ cd my-python-project
#     $ startpyproject my_package_name
# 
# The startpyproject script is self-contained. Simply drop it anywhere on your
# PATH.
#
# Author:  Ian Fisher (iafisher@protonmail.com)
# Version: May 2019
# Online:  https://github.com/iafisher/startpyproject


set -e


usage() {
  echo "Usage: $0 [options] package"
  echo
  echo "Options:"
  echo "  --help      Display a help message."
}


# Parse command-line options.
for opt in "$@"; do
  if [[ "$opt" = --help ]]; then
    OPT_HELP=yes
  else
    if [[ -n "$OPT_PACKAGE" ]]; then
      ERROR=yes
      break
    else
      OPT_PACKAGE=$opt
    fi
  fi
done


# Handle errors in parsing.
if [[ -n "$ERROR" ]]; then
  echo "Error: could not parse command-line options."
  echo
  usage
  exit 1
fi


if [[ -n "$OPT_HELP" ]]; then
  usage
  exit
fi


echo "[startpyproject] Creating git repository"
git init


echo "[startpyproject] Creating .gitignore"
cat << EOF > .gitignore
__pycache__
*.pyc
*.pyo
.mypy_cache
.pytest_cache
.venv
*.egg-info
/build
/dist
.coverage

*.swp
*~
.DS_Store
EOF


echo "[startpyproject] Creating .flake8"
cat << EOF > .flake8
[flake8]
max-line-length = 88
exclude = .git, __pycache__, __init__py
# Ignore errors that black handles or creates (e.g., E203).
ignore =
    # E203 whitespace before ':'
    E203,
    # W503 line break before binary operator
    W503,
    # W293 blank line contains whitespace (sometimes we need it in string
    # literals, and black will catch it anyway)
    W293,
    # E501 line too long
    E501,
EOF


echo "[startpyproject] Creating .git/hooks/pre-commit"
cat << EOF > .git/hooks/pre-commit
#!/bin/sh

set -e

# Find all Python files, ignoring the virtual environment, and run black and
# flake8 on them.
PY=$(find . -path ./.venv -prune -o -name "*.py" -print)
black --check $PY
flake8 $PY
EOF
chmod +x .git/hooks/pre-commit


echo "[startpyproject] Creating package directory"
mkdir "$OPT_PACKAGE"
touch "$OPT_PACKAGE/__init__.py"


echo "[startpyproject] Creating test directory"
mkdir test
touch test/__init__.py


echo "[startpyproject] Creating virtual environment"
virtualenv .venv --python=python3


echo "[startpyproject] All done!"
