#!/bin/bash
# startpyproject: Auto-generate a boilerplate Python project.
# 
# Does the following:
#   - Initializes a git repo with a Python-tailored .gitignore.
#   - Sets up a pre-commit hook for git that runs black and flake8.
#   - Creates a flake8 configuration file.
#   - Creates directories for the main package and the test package.
#   - Creates a virtual environment.
# 
# Make sure to run the script in the already-created project directory. Typical
# usage is
# 
#     $ mkdir my-python-project
#     $ cd my-python-project
#     $ startpyproject my_package_name
# 
# The startpyproject script is self-contained. Simply drop it anywhere on your
# PATH.
#
# Author:  Ian Fisher (iafisher@protonmail.com)
# Version: April 2019
# Online:  https://github.com/iafisher/startpyproject

set -e

if [[ -n $1 ]]; then
  PACKAGE="$1"
else
  echo "Usage: $0 <package-name>"
  exit 1
fi

echo "[startpyproject] Creating git repository"
git init

echo "[startpyproject] Copying .gitignore template"
cat << EOF > .gitignore
__pycache__
*.pyc
*.pyo
.mypy_cache
.pytest_cache
.venv
*.egg-info
/build
/dist
.coverage

*.swp
*~
.DS_Store
EOF

echo "[startpyproject] Copying .flake8 template"
cat << EOF > .flake8
[flake8]
max-line-length = 88
exclude = .git, __pycache__, __init__py
# Ignore errors that black handles or creates (e.g., E203).
ignore =
    # E203 whitespace before ':'
    E203,
    # W503 line break before binary operator
    W503,
    # W293 blank line contains whitespace (sometimes we need it in string literals,
    # and black will catch it anyway)
    W293,
    # E501 line too long
    E501,
EOF

echo "[startpyproject] Copying .git/hooks/pre-commit template"
cat << EOF > .git/hooks/pre-commit
#!/bin/sh
#
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

# Run black and flake8 on the main and test packages.
black --check "$PACKAGE" test && \
  flake8 "$PACKAGE" test
EOF
chmod +x .git/hooks/pre-commit

echo "[startpyproject] Creating package directory"
mkdir "$PACKAGE"
touch "$PACKAGE/__init__.py"

echo "[startpyproject] Creating test directory"
mkdir test
touch test/__init__.py

echo "[startpyproject] Creating virtual environment"
virtualenv .venv --python=python3

echo "[startpyproject] All done!"
